
> llm-chat@0.1.0 dev
> next dev --turbopack

   ‚ñ≤ Next.js 15.1.3 (Turbopack)
   - Local:        http://localhost:3000
   - Network:      http://172.25.0.3:3000

 ‚úì Starting...
 ‚úì Ready in 3.5s
 ‚ö† Webpack is configured while Turbopack is not, which may cause problems.
 ‚ö† See instructions if you need to configure Turbopack:
  https://nextjs.org/docs/app/api-reference/next-config-js/turbo

 ‚óã Compiling /api/storage ...
Initializing SQLite database at: /app/kibitz/data/kibitz.db
Creating database schema...
Database schema initialized successfully
Setting up database optimizations...
Database optimizations applied
 GET /api/storage 400 in 3768ms
 GET /api/storage 400 in 215ms
 GET /api/storage 400 in 455ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET / 200 in 17827ms
 ‚úì Compiled /api/storage in 20.7s
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚óã Compiling /api/database ...
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 380ms
üîç Using project path: /Users/test/gitrepo/projects/xy3wux_new-project
 ‚úì Compiled /api/database in 1667ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


Database initialization - tables already exist
 POST /api/database 200 in 1799ms
‚úÖ Got current branch from git command: conv-sso6i-step-1
üîç Current branch for project xy3wux: conv-sso6i-step-1
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/database?operation=get_all_projects 200 in 628ms
 ‚óã Compiling /_not-found/page ...
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/keys 200 in 764ms
 ‚úì Compiled /_not-found/page in 1753ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /.well-known/appspecific/com.chrome.devtools.json 404 in 2063ms
 ‚úì Compiled /api/projects/[projectId] in 303ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: xy3wux
üìã API: Found project directory at: /Users/test/gitrepo/projects/xy3wux_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/xy3wux_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project xy3wux
‚úÖ API: Successfully loaded project data for xy3wux: {
  commit_hash: '7783c9ee038e...',
  branch: 'conv-sso6i-step-1',
  author: 'malikrohail',
  fileSize: '3543 bytes'
}
 GET /api/projects/xy3wux 200 in 1049ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: xy3wux
üìã API: Found project directory at: /Users/test/gitrepo/projects/xy3wux_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/xy3wux_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project xy3wux
‚úÖ API: Successfully loaded project data for xy3wux: {
  commit_hash: '7783c9ee038e...',
  branch: 'conv-sso6i-step-1',
  author: 'malikrohail',
  fileSize: '3543 bytes'
}
 GET /api/projects/xy3wux 200 in 137ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


Database API error: SqliteError: FOREIGN KEY constraint failed
    at POST (src/app/api/database/route.ts:70:15)
  68 |           `);
  69 |
> 70 |           stmt.run(id, project_id, name, JSON.stringify([]), created_at, updated_at);
     |               ^
  71 |           
  72 |           // Update project's last activity
  73 |           const updateStmt = db.prepare(` {
  code: 'SQLITE_CONSTRAINT_FOREIGNKEY'
}
 POST /api/database 500 in 336ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 385ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 POST /api/database 200 in 454ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: xy3wux
üìã API: Found project directory at: /Users/test/gitrepo/projects/xy3wux_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/xy3wux_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project xy3wux
‚úÖ API: Successfully loaded project data for xy3wux: {
  commit_hash: '7783c9ee038e...',
  branch: 'conv-sso6i-step-1',
  author: 'malikrohail',
  fileSize: '3543 bytes'
}
 GET /api/projects/xy3wux 200 in 486ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 135ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: xy3wux
üìã API: Found project directory at: /Users/test/gitrepo/projects/xy3wux_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/xy3wux_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project xy3wux
‚úÖ API: Successfully loaded project data for xy3wux: {
  commit_hash: '7783c9ee038e...',
  branch: 'conv-sso6i-step-1',
  author: 'malikrohail',
  fileSize: '3543 bytes'
}
 GET /api/projects/xy3wux 200 in 81ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 107ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 88ms
 ‚óã Compiling /api/projects/[projectId]/generate ...
 ‚úì Compiled /api/projects/[projectId]/generate in 552ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã Generate API: Creating JSON for project m1urh
üìã Generate API: Found project at /Users/test/gitrepo/projects/m1urh_new-project
üìã Generate API: Extracting ALL real git data from /Users/test/gitrepo/projects/m1urh_new-project
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
‚ùå Generate API: Failed to extract real git data: Error: Command failed: git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).

    at POST (src/app/api/projects/[projectId]/generate/route.ts:63:41)
  61 |       // Get ALL branches
  62 |       const allBranchesCommand = 'git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"';
> 63 |       const allBranchesOutput = execSync(allBranchesCommand, { 
     |                                         ^
  64 |         cwd: projectPath, 
  65 |         encoding: 'utf8',
  66 |         timeout: 10000  {
  status: 128,
  signal: null,
  output: [Array],
  pid: 533,
  stdout: '',
  stderr: 'fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)\n' +
    'Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\n'
}
‚ùå Generate API: Error creating JSON: Error: Failed to extract git data: Command failed: git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).

    at POST (src/app/api/projects/[projectId]/generate/route.ts:228:12)
  226 |     } catch (gitError) {
  227 |       console.error(`‚ùå Generate API: Failed to extract real git data:`, gitError);
> 228 |       throw new Error(`Failed to extract git data: ${gitError instanceof Error ? gitError.message : 'Unknown error'}`);
      |            ^
  229 |     }
  230 |     
  231 |     // Create project data with the structure the API expects
 POST /api/projects/m1urh/generate 500 in 1201ms
 ‚úì Compiled /api/github-sync/trigger in 448ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìÅ Found project directory: /Users/test/gitrepo/projects/m1urh_new-project
‚ùå Failed to trigger GitHub sync: Error: Project JSON file not found: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
    at readProjectJson (project-json-manager.js:140:10)
    at async POST (src/app/api/github-sync/trigger/route.ts:261:24)
  138 |   
  139 |   if (!await validatePath(jsonPath)) {
> 140 |     throw new Error(`Project JSON file not found: ${jsonPath}`);
      |          ^
  141 |   }
  142 |   
  143 |   try {
 POST /api/github-sync/trigger 500 in 595ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET / 200 in 145ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /.well-known/appspecific/com.chrome.devtools.json 404 in 698ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


Database initialization - tables already exist
 POST /api/database 200 in 383ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/database?operation=get_all_projects 200 in 51ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/keys 200 in 27ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 152ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 75ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 60ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã Generate API: Creating JSON for project m1urh
üìã Generate API: Found project at /Users/test/gitrepo/projects/m1urh_new-project
üìã Generate API: Extracting ALL real git data from /Users/test/gitrepo/projects/m1urh_new-project
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
‚ùå Generate API: Failed to extract real git data: Error: Command failed: git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).

    at POST (src/app/api/projects/[projectId]/generate/route.ts:63:41)
  61 |       // Get ALL branches
  62 |       const allBranchesCommand = 'git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"';
> 63 |       const allBranchesOutput = execSync(allBranchesCommand, { 
     |                                         ^
  64 |         cwd: projectPath, 
  65 |         encoding: 'utf8',
  66 |         timeout: 10000  {
  status: 128,
  signal: null,
  output: [Array],
  pid: 594,
  stdout: '',
  stderr: 'fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)\n' +
    'Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\n'
}
‚ùå Generate API: Error creating JSON: Error: Failed to extract git data: Command failed: git branch -a --format="%(refname:short)|%(objectname)|%(committerdate:iso8601)|%(authorname)|%(subject)"
fatal: not a git repository (or any parent up to mount point /Users/test/gitrepo)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).

    at POST (src/app/api/projects/[projectId]/generate/route.ts:228:12)
  226 |     } catch (gitError) {
  227 |       console.error(`‚ùå Generate API: Failed to extract real git data:`, gitError);
> 228 |       throw new Error(`Failed to extract git data: ${gitError instanceof Error ? gitError.message : 'Unknown error'}`);
      |            ^
  229 |     }
  230 |     
  231 |     // Create project data with the structure the API expects
 POST /api/projects/m1urh/generate 500 in 509ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 158ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìÅ Found project directory: /Users/test/gitrepo/projects/m1urh_new-project
‚ùå Failed to trigger GitHub sync: Error: Project JSON file not found: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
    at readProjectJson (project-json-manager.js:140:10)
    at async POST (src/app/api/github-sync/trigger/route.ts:261:24)
  138 |   
  139 |   if (!await validatePath(jsonPath)) {
> 140 |     throw new Error(`Project JSON file not found: ${jsonPath}`);
      |          ^
  141 |   }
  142 |   
  143 |   try {
 POST /api/github-sync/trigger 500 in 127ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET / 200 in 131ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /.well-known/appspecific/com.chrome.devtools.json 404 in 629ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


Database initialization - tables already exist
 POST /api/database 200 in 274ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/database?operation=get_all_projects 200 in 38ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/keys 200 in 25ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 123ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 112ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
‚ö†Ô∏è API: JSON file missing for m1urh - project needs initialization
‚ö†Ô∏è API: Expected location: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
 GET /api/projects/m1urh 404 in 54ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã Generate API: Creating JSON for project m1urh
üìã Generate API: Found project at /Users/test/gitrepo/projects/m1urh_new-project
üìã Generate API: Extracting ALL real git data from /Users/test/gitrepo/projects/m1urh_new-project
Could not get language stats, using empty
üìã Generate API: Extracted REAL git data: {
  branches: 0,
  totalCommits: 0,
  currentBranch: 'main',
  languages: [],
  repoSize: '80KB'
}
üîç Extracting conversation data from branches...
üîç Extracted 0 conversations from branches
‚úÖ Generate API: JSON file created successfully: {
  path: '/Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json',
  size: '1207 bytes'
}
 POST /api/projects/m1urh/generate 200 in 297ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1207 bytes'
}
 GET /api/projects/m1urh 200 in 363ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1207 bytes'
}
 GET /api/projects/m1urh 200 in 113ms
 ‚úì Compiled /api/github-sync/config in 445ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìÅ Found project directory: /Users/test/gitrepo/projects/m1urh_new-project
üîÑ Updating GitHub config for project m1urh: {
  enabled: true,
  remoteUrl: 'https://github.com/user/New Project.git',
  projectPath: '/Users/test/gitrepo/projects/m1urh_new-project'
}
[INFO] Updated GitHub config for project: m1urh
‚úÖ GitHub sync enabled for project m1urh
 POST /api/github-sync/config 200 in 549ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìÅ Found project directory: /Users/test/gitrepo/projects/m1urh_new-project
üöÄ Triggering GitHub sync for project m1urh: {
  immediate: true,
  projectPath: '/Users/test/gitrepo/projects/m1urh_new-project',
  enabled: true
}
üöÄ Performing REAL GitHub sync for m1urh (immediate: true)
üîß Starting real GitHub sync for project m1urh at /Users/test/gitrepo/projects/m1urh_new-project
üîç DEBUG: Checking GitHub environment variables:
üîç DEBUG: GITHUB_TOKEN exists: true
üîç DEBUG: GH_TOKEN exists: false
üîç DEBUG: GITHUB_USERNAME: malikrohail
üîç DEBUG: GIT_USER_NAME: malikrohail
üîç DEBUG: GIT_USER_EMAIL: malikrohail525@gmail.com
üîó Using remote URL: https://github.com/user/New Project.git
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1168 bytes'
}
 GET /api/projects/m1urh 200 in 151ms
‚úÖ GitHub CLI found at: gh
‚úÖ Project m1urh is already a git repository
üîß No remote origin found, creating GitHub repository: New Project
üöÄ Creating GitHub repository using CLI: gh repo create New Project
üîç DEBUG: Using GitHub CLI path: gh
üîç DEBUG: Repository name: New Project
üîç DEBUG: Working directory: /Users/test/gitrepo/projects/m1urh_new-project
üîç DEBUG: GitHub CLI auth status: github.com
  ‚úì Logged in to github.com account malikrohail (GITHUB_TOKEN)
  - Active account: true
  - Git operations protocol: https
  - Token: ghp_************************************
  - Token scopes: 'admin:enterprise', 'admin:gpg_key', 'admin:org', 'admin:org_hook', 'admin:public_key', 'admin:repo_hook', 'admin:ssh_signing_key', 'audit_log', 'codespace', 'copilot', 'delete:packages', 'delete_repo', 'gist', 'notifications', 'project', 'repo', 'user', 'workflow', 'write:discussion', 'write:network_configurations', 'write:packages'

üîç DEBUG: GitHub CLI repo list test: malikrohail/xy3wux-project		private	2025-08-06T13:48:51Z

üîç DEBUG: Attempting to create repository: gh repo create New Project --private --source=. --remote=origin --push
‚ö†Ô∏è GitHub CLI creation failed: Error: Command failed: gh repo create New Project --private --source=. --remote=origin --push
accepts at most 1 arg(s), received 2

üîç DEBUG: GitHub CLI error details: [Error: Command failed: gh repo create New Project --private --source=. --remote=origin --push
accepts at most 1 arg(s), received 2
] {
  code: 1,
  killed: false,
  signal: null,
  cmd: 'gh repo create New Project --private --source=. --remote=origin --push',
  stdout: '',
  stderr: 'accepts at most 1 arg(s), received 2\n'
}
üîÑ Falling back to manual git commands...
üîß Adding remote manually: https://github.com/user/New Project.git
üîç DEBUG: Setting up git remote and branch...
üîç DEBUG: Manual push failed with error: [Error: Command failed: git remote add origin https://github.com/user/New Project.git
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from

] {
  code: 129,
  killed: false,
  signal: null,
  cmd: 'git remote add origin https://github.com/user/New Project.git',
  stdout: '',
  stderr: 'usage: git remote add [<options>] <name> <url>\n' +
    '\n' +
    '    -f, --[no-]fetch      fetch the remote branches\n' +
    '    --[no-]tags           import all tags and associated objects when fetching\n' +
    '                          or do not fetch any tag at all (--no-tags)\n' +
    '    -t, --[no-]track <branch>\n' +
    '                          branch(es) to track\n' +
    '    -m, --[no-]master <branch>\n' +
    '                          master branch\n' +
    '    --[no-]mirror[=(push|fetch)]\n' +
    '                          set up remote as a mirror to push to or fetch from\n' +
    '\n'
}
üîç DEBUG: Error message: Command failed: git remote add origin https://github.com/user/New Project.git
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


üîç DEBUG: Error code: 129
üîç DEBUG: Error stdout: None
üîç DEBUG: Error stderr: usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


‚ùå GitHub sync failed for m1urh: Failed to setup GitHub repository. Please create New Project manually on GitHub and try again. Error: Error: Command failed: git remote add origin https://github.com/user/New Project.git
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


[INFO] Updated GitHub config for project: m1urh
 POST /api/github-sync/trigger 500 in 1642ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 114ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 PUT /api/keys 200 in 123ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 172ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 86ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 42ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 103ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 125ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 100ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 29ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 44ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 34ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 37ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 106ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 27ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 36ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 30ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 53ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 103ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 160ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 93ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 104ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 36ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 36ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 101ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 31ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 24ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 28ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 84ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 177ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 413ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 162ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 117ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 45ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 155ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 131ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 193ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 69ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 37ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 48ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 67ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 63ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 37ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 51ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 65ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 55ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 47ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 64ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 50ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 33ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: main
üîç Current branch for project m1urh: main
 GET /api/projects/m1urh/branches/current 200 in 138ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 81ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 73ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 57ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 117ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 136ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 44ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 89ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 35ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 40ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 41ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 49ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 31ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 66ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 38ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 27ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 52ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 29ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: 'unknown...',
  branch: 'main',
  author: 'Unknown',
  fileSize: '1191 bytes'
}
 GET /api/projects/m1urh 200 in 69ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 83ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: main
üîç Current branch for project m1urh: main
 GET /api/projects/m1urh/branches/current 200 in 134ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 256ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 148ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã Generate API: Creating JSON for project m1urh
üìã Generate API: Found project at /Users/test/gitrepo/projects/m1urh_new-project
üìã Generate API: Existing GitHub enabled state: true
üìã Generate API: Extracting ALL real git data from /Users/test/gitrepo/projects/m1urh_new-project
üìã Generate API: Extracted REAL git data: {
  branches: 2,
  totalCommits: 1,
  currentBranch: 'auto/20250807-154125',
  languages: [ 'py' ],
  repoSize: '136KB'
}
üîç Extracting conversation data from branches...
üîç Extracted 0 conversations from branches
‚úÖ Generate API: JSON file created successfully: {
  path: '/Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json',
  size: '2356 bytes'
}
 POST /api/projects/m1urh/generate 200 in 283ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 82ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 163ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 274ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 272ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 49ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 91ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 108ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 137ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 127ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 248ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 197ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìã API: Fetching project data for projectId: m1urh
üìã API: Found project directory at: /Users/test/gitrepo/projects/m1urh_new-project
üìã API: Looking for JSON file at: /Users/test/gitrepo/projects/m1urh_new-project/.kibitz/api/project.json
üìã API: Reading JSON file for project m1urh
‚úÖ API: Successfully loaded project data for m1urh: {
  commit_hash: '1deae9d59a84...',
  branch: 'auto/20250807-154125',
  author: 'malikrohail',
  fileSize: '2356 bytes'
}
 GET /api/projects/m1urh 200 in 53ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


üìÅ Found project directory: /Users/test/gitrepo/projects/m1urh_new-project
üöÄ Triggering GitHub sync for project m1urh: {
  immediate: true,
  projectPath: '/Users/test/gitrepo/projects/m1urh_new-project',
  enabled: true
}
üöÄ Performing REAL GitHub sync for m1urh (immediate: true)
üîß Starting real GitHub sync for project m1urh at /Users/test/gitrepo/projects/m1urh_new-project
üîç DEBUG: Checking GitHub environment variables:
üîç DEBUG: GITHUB_TOKEN exists: true
üîç DEBUG: GH_TOKEN exists: false
üîç DEBUG: GITHUB_USERNAME: malikrohail
üîç DEBUG: GIT_USER_NAME: malikrohail
üîç DEBUG: GIT_USER_EMAIL: malikrohail525@gmail.com
üîó Using remote URL: https://github.com/malikrohail/m1urh-project.git
‚úÖ GitHub CLI found at: gh
‚úÖ Project m1urh is already a git repository
üîß No remote origin found, creating GitHub repository: m1urh-project
üöÄ Creating GitHub repository using CLI: gh repo create m1urh-project
üîç DEBUG: Using GitHub CLI path: gh
üîç DEBUG: Repository name: m1urh-project
üîç DEBUG: Working directory: /Users/test/gitrepo/projects/m1urh_new-project
üîç DEBUG: GitHub CLI auth status: github.com
  ‚úì Logged in to github.com account malikrohail (GITHUB_TOKEN)
  - Active account: true
  - Git operations protocol: https
  - Token: ghp_************************************
  - Token scopes: 'admin:enterprise', 'admin:gpg_key', 'admin:org', 'admin:org_hook', 'admin:public_key', 'admin:repo_hook', 'admin:ssh_signing_key', 'audit_log', 'codespace', 'copilot', 'delete:packages', 'delete_repo', 'gist', 'notifications', 'project', 'repo', 'user', 'workflow', 'write:discussion', 'write:network_configurations', 'write:packages'

üîç DEBUG: GitHub CLI repo list test: malikrohail/xy3wux-project		private	2025-08-06T13:48:51Z

üîç DEBUG: Attempting to create repository: gh repo create m1urh-project --private --source=. --remote=origin --push
‚úÖ Created GitHub repository and pushed: m1urh-project
üîó Repository URL: https://github.com/malikrohail/m1urh-project.git
‚úÖ Real GitHub sync completed for m1urh: Created new GitHub repository: m1urh-project at https://github.com/malikrohail/m1urh-project.git
[INFO] Updated GitHub config for project: m1urh
 POST /api/github-sync/trigger 200 in 3664ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 88ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 214ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 174ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 199ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 143ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 161ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 141ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 150ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 165ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 152ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 140ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 282ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 176ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 191ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 132ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 142ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 255ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 164ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 126ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 175ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 151ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 198ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 163ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 156ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 129ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 128ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 82ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 135ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 87ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 180ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 91ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 194ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 73ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 80ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 217ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 87ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 136ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 274ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 83ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 103ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 198ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 129ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 97ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 228ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 110ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 81ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 179ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 82ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 95ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 195ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 103ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 90ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 231ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 75ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 88ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 240ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 116ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 82ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 215ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 154ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 77ms
üîç Using project path: /Users/test/gitrepo/projects/m1urh_new-project
‚úÖ Got current branch from git command: auto/20250807-154125
üîç Current branch for project m1urh: auto/20250807-154125
 GET /api/projects/m1urh/branches/current 200 in 309ms
 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 ‚ö† ./tailwind.config.ts
Specified module format (EcmaScript Modules) is not matching the module format of the source code (CommonJs)
The EcmaScript module format was specified in the package.json that is affecting this source file or by using an special extension, but it looks like that CommonJs syntax is used in the source code.
Exports made by CommonJs syntax will lead to a runtime error, since the module is in EcmaScript mode. Either change the "type" field in the package.json or replace CommonJs syntax with EcmaScript import/export syntax in the source file.


 ‚ö† ./src/lib/enhancedConversationCommitService.ts:138:18
Module not found: Can't resolve 'fs'
[0m [90m 136 |[39m       [90m// Use Node.js built-in modules for better reliability[39m[0m
[0m [90m 137 |[39m       [36mconst[39m path [33m=[39m require([32m'path'[39m)[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 138 |[39m       [36mconst[39m fs [33m=[39m require([32m'fs'[39m)[33m;[39m[0m
[0m [90m     |[39m                  [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 139 |[39m       [36mconst[39m jsonFilePath [33m=[39m path[33m.[39mjoin(request[33m.[39mprojectPath[33m,[39m [32m'.kibitz'[39m[33m,[39m [32m'api'[39m[33m,[39m [32m'project.json'[39m)[33m;[39m[0m
[0m [90m 140 |[39m       [0m
[0m [90m 141 |[39m       console[33m.[39mlog([32m'üìù Looking for project JSON at:'[39m[33m,[39m jsonFilePath)[33m;[39m[0m



https://nextjs.org/docs/messages/module-not-found


 GET /api/storage 400 in 91ms
